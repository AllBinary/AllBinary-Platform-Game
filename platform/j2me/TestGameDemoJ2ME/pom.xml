<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <groupId>org.allbinary.game.testgamedemo</groupId>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>TestGameDemoJ2ME</artifactId>
    <packaging>jar</packaging>
    <!-- AllBinary Platform Version Start -->
    <version>1.0.0-SNAPSHOT</version>
    <!-- AllBinary Platform Version End -->

    <name>TestGameDemoJ2ME</name>
    <url>http://www.allbinary.com/</url>

    <properties>
        <inputPath2>src\main\java\</inputPath2>
        <inputPath3>..\..\..\..\..\media\sound\BasicPlayerJavaLibraryM\midp_20\</inputPath3>
        <inputPath>target\dependency\</inputPath>
        <outputPath>..\TestGameDemoJ2MEApplicationM\src\main\java\</outputPath>
    </properties>

    <dependencies>
        <!--
-        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
        -->

        <dependency>
            <groupId>org.allbinary</groupId>
            <artifactId>LoggingJ2MEAll</artifactId>

<!--
<artifactId>LoggingJ2MEAll</artifactId>
<artifactId>LoggingNone</artifactId>
<artifactId>LoggingJ2MEException</artifactId>
<artifactId>LoggingRemoteException</artifactId>

-->

    <!-- AllBinary Platform Version Start -->
    <version>1.0.0-SNAPSHOT</version>
    <!-- AllBinary Platform Version End -->
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.allbinary</groupId>
            <artifactId>GameInputMEKeyOnlyJavaLibrary</artifactId>
    <!-- AllBinary Platform Version Start -->
    <version>1.0.0-SNAPSHOT</version>
    <!-- AllBinary Platform Version End -->

        </dependency>

        <dependency>
            <groupId>org.allbinary</groupId>
            <artifactId>AdvertisementClientNoneJavaLibrary</artifactId>
    <!-- AllBinary Platform Version Start -->
    <version>1.0.0-SNAPSHOT</version>
    <!-- AllBinary Platform Version End -->

        </dependency>

        <dependency>
            <groupId>org.allbinary.game.multiplayer</groupId>
            <artifactId>AllBinaryGameClientBaseNullJavaLibrary</artifactId>
    <!-- AllBinary Platform Version Start -->
    <version>1.0.0-SNAPSHOT</version>
    <!-- AllBinary Platform Version End -->

        </dependency>

        <dependency>
            <groupId>org.allbinary</groupId>
            <artifactId>NoGyroSensorJavaLibrary</artifactId>
    <!-- AllBinary Platform Version Start -->
    <version>1.0.0-SNAPSHOT</version>
    <!-- AllBinary Platform Version End -->

        </dependency>
        
        <dependency>
            <groupId>org.allbinary</groupId>
            <artifactId>MotionGestureJavaLibrary</artifactId>
    <!-- AllBinary Platform Version Start -->
    <version>1.0.0-SNAPSHOT</version>
    <!-- AllBinary Platform Version End -->

        </dependency>

        <dependency>
            <groupId>org.allbinary</groupId>
            <artifactId>TouchScreenJ2MENoneJavaLibrary</artifactId>
    <!-- AllBinary Platform Version Start -->
    <version>1.0.0-SNAPSHOT</version>
    <!-- AllBinary Platform Version End -->

        </dependency>


        <dependency>
  <groupId>org.allbinary</groupId>
  <artifactId>TouchJ2MENoneJavaLibrary</artifactId>
            <!-- AllBinary Platform Version Start -->
            <version>1.0.0-SNAPSHOT</version>
            <!-- AllBinary Platform Version End -->
            <!--
            <artifactId>TouchJ2MEJavaLibrary</artifactId>
            <artifactId>TouchJ2MENoneJavaLibrary</artifactId>
            -->
        </dependency>

        <dependency>
            <groupId>org.allbinary</groupId>
            <artifactId>AllBinaryOnJ2MEPlatformJavaLibrary</artifactId>
    <!-- AllBinary Platform Version Start -->
    <version>1.0.0-SNAPSHOT</version>
    <!-- AllBinary Platform Version End -->
        </dependency>

        <dependency>
            <groupId>org.allbinary</groupId>
            <artifactId>MicroEmulatorCustomUIJavaLibrary</artifactId>
            <!--
            <artifactId>MicroEmulatorCustomUIJavaLibrary</artifactId>
            <artifactId>NullCustomUIJavaLibrary</artifactId>
            -->
    <!-- AllBinary Platform Version Start -->
    <version>1.0.0-SNAPSHOT</version>
    <!-- AllBinary Platform Version End -->

        </dependency>

        <dependency>
            <groupId>org.allbinary</groupId>
            <artifactId>NoGameLicensingJavaLibrary</artifactId>
        <!--
            <artifactId>NoGameLicensingJavaLibrary</artifactId>
            <artifactId>LicensedGameDemoJavaLibrary</artifactId>
        -->
    <!-- AllBinary Platform Version Start -->
    <version>1.0.0-SNAPSHOT</version>
    <!-- AllBinary Platform Version End -->

            <optional>true</optional>
            <exclusions>
                <exclusion>
                    <artifactId>XmlRpcJavaLibrary</artifactId>
                    <groupId>org.allbinary</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.allbinary</groupId>
            <artifactId>GameLicensingOnlyDemoJavaLibrary</artifactId>
        <!--
            <artifactId>GameLicensingOnlyNormalJavaLibrary</artifactId>
            <artifactId>GameLicensingOnlyDemoJavaLibrary</artifactId>
        -->
    <!-- AllBinary Platform Version Start -->
    <version>1.0.0-SNAPSHOT</version>
    <!-- AllBinary Platform Version End -->

        </dependency>

        <dependency>
            <groupId>org.allbinary</groupId>
            <artifactId>HardCodedLicenseInitInfoJavaLibrary</artifactId>
            <!--
            <artifactId>HardCodedLicenseInitInfoJavaLibrary</artifactId>
            <artifactId>FileLicenseInitInfoJavaLibrary</artifactId>

        <dependency>
            <groupId>org.allbinary</groupId>
            <artifactId>BouncyCastleDESJavaLibrary</artifactId>
        </dependency>

        <dependency>
            <groupId>org.allbinary</groupId>
            <artifactId>FileJ2SEJavaLibrary</artifactId>
        </dependency>
            -->
            <!-- AllBinary Platform Version Start -->
            <version>1.0.0-SNAPSHOT</version>
            <!-- AllBinary Platform Version End -->

        </dependency>

        <dependency>
            <groupId>org.allbinary</groupId>
            <artifactId>VectorAnimationJ2MEJavaLibrary</artifactId>
            <!-- AllBinary Platform Version Start -->
            <version>1.0.0-SNAPSHOT</version>
            <!-- AllBinary Platform Version End -->

        </dependency>

        <dependency>
            <groupId>org.allbinary.game.testgamedemo</groupId>
            <artifactId>TestGameDemoPCClientInfoJavaLibrary</artifactId>
            <!-- AllBinary Platform Version Start -->
            <version>1.0.0-SNAPSHOT</version>
            <!-- AllBinary Platform Version End -->
            <exclusions>
                <exclusion>
                    <artifactId>AllBinaryGyroSensorJavaLibrary</artifactId>
                    <groupId>org.allbinary</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>GameScoresLibrary</artifactId>
                    <groupId>org.allbinary</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.allbinary.game.testgamedemo</groupId>
            <artifactId>TestGameDemoJ2MEJavaLibrary</artifactId>
            <!-- AllBinary Platform Version Start -->
            <version>1.0.0-SNAPSHOT</version>
            <!-- AllBinary Platform Version End -->

        </dependency>

        <dependency>
            <groupId>org.allbinary.game.testgamedemo</groupId>
            <artifactId>TestGameDemoBaseJavaLibrary</artifactId>
            <!-- AllBinary Platform Version Start -->
            <version>1.0.0-SNAPSHOT</version>
            <!-- AllBinary Platform Version End -->

        </dependency>

<!--
-->
        <dependency>
            <groupId>org.microemu</groupId>
            <artifactId>microemu-midp</artifactId>
            <version>3.0.0-SNAPSHOT</version>
            <optional>true</optional>
        </dependency>
    
    </dependencies>


    <build>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <classifier>sources</classifier>
                            <failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
                            <!--
                            <outputDirectory>${project.build.directory}/sources</outputDirectory>
                            -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

<!-- Delete output directory -->
<plugin>
<groupId>org.apache.maven.plugins</groupId>
<artifactId>maven-clean-plugin</artifactId>
<version>2.4.1</version>
<configuration>
    <followSymLinks>false</followSymLinks>
    <filesets>
        <fileset>
            <directory>${outputPath}</directory>
        </fileset>
    </filesets>
</configuration>
</plugin>
      
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.4.3</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${outputPath}</outputDirectory>
              <resources>          
                <resource>
                  <directory>${inputPath}</directory>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>${inputPath2}</directory>
                  <filtering>true</filtering>
                </resource>
                <!--
                -->                
                <resource>
                  <directory>${inputPath3}</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>              
            </configuration>            
          </execution>
        </executions>
      </plugin>

        </plugins>
    </build>

</project>
